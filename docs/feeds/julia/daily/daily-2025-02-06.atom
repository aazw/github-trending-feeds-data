<?xml version='1.0' encoding='utf-8'?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en">
  <id>https://aazw.github.io/github-trending-feeds/feeds/julia/daily.atom</id>
  <title>GitHub Trending - julia (daily)</title>
  <link href="https://aazw.github.io/github-trending-feeds/feeds/julia/daily.atom" rel="self" />
  <link href="https://aazw.github.io/github-trending-feeds/" rel="alternate" />
  <icon>https://github.githubassets.com/favicons/favicon.svg</icon>
  <updated>2025-02-06T00:00:00</updated>
  <author>
    <name>aazw</name>
  </author>
  <entry>
    <id>https://github.com/CliMA/ClimaLand.jl#1738800000</id>
    <title>https://github.com/CliMA/ClimaLand.jl</title>
    <link href="https://github.com/CliMA/ClimaLand.jl" />
    <updated>2025-02-06T00:00:00</updated>
    <content type="text">Clima's Land Model</content>
  </entry>
  <entry>
    <id>https://github.com/EnzymeAD/Reactant.jl#1738800000</id>
    <title>https://github.com/EnzymeAD/Reactant.jl</title>
    <link href="https://github.com/EnzymeAD/Reactant.jl" />
    <updated>2025-02-06T00:00:00</updated>
    <content type="text">Optimize Julia Functions With MLIR and XLA for High-Performance Execution on CPU, GPU, TPU and more.</content>
  </entry>
  <entry>
    <id>https://github.com/JuliaDiff/ForwardDiff.jl#1738800000</id>
    <title>https://github.com/JuliaDiff/ForwardDiff.jl</title>
    <link href="https://github.com/JuliaDiff/ForwardDiff.jl" />
    <updated>2025-02-06T00:00:00</updated>
    <content type="text">Forward Mode Automatic Differentiation for Julia</content>
  </entry>
  <entry>
    <id>https://github.com/JuliaGPU/CUDA.jl#1738800000</id>
    <title>https://github.com/JuliaGPU/CUDA.jl</title>
    <link href="https://github.com/JuliaGPU/CUDA.jl" />
    <updated>2025-02-06T00:00:00</updated>
    <content type="text">CUDA programming in Julia.</content>
  </entry>
  <entry>
    <id>https://github.com/JuliaGPU/KernelAbstractions.jl#1738800000</id>
    <title>https://github.com/JuliaGPU/KernelAbstractions.jl</title>
    <link href="https://github.com/JuliaGPU/KernelAbstractions.jl" />
    <updated>2025-02-06T00:00:00</updated>
    <content type="text">Heterogeneous programming in Julia</content>
  </entry>
  <entry>
    <id>https://github.com/JuliaHEP/JetReconstruction.jl#1738800000</id>
    <title>https://github.com/JuliaHEP/JetReconstruction.jl</title>
    <link href="https://github.com/JuliaHEP/JetReconstruction.jl" />
    <updated>2025-02-06T00:00:00</updated>
    <content type="text">Jet reconstruction (reclustering) with Julia</content>
  </entry>
  <entry>
    <id>https://github.com/JuliaLang/julia#1738800000</id>
    <title>https://github.com/JuliaLang/julia</title>
    <link href="https://github.com/JuliaLang/julia" />
    <updated>2025-02-06T00:00:00</updated>
    <content type="text">The Julia Programming Language</content>
  </entry>
  <entry>
    <id>https://github.com/JuliaPlots/Plots.jl#1738800000</id>
    <title>https://github.com/JuliaPlots/Plots.jl</title>
    <link href="https://github.com/JuliaPlots/Plots.jl" />
    <updated>2025-02-06T00:00:00</updated>
    <content type="text">Powerful convenience for Julia visualizations and data analysis</content>
  </entry>
  <entry>
    <id>https://github.com/JuliaRegistries/General#1738800000</id>
    <title>https://github.com/JuliaRegistries/General</title>
    <link href="https://github.com/JuliaRegistries/General" />
    <updated>2025-02-06T00:00:00</updated>
    <content type="text">The official registry of general Julia packages</content>
  </entry>
  <entry>
    <id>https://github.com/SciML/OrdinaryDiffEq.jl#1738800000</id>
    <title>https://github.com/SciML/OrdinaryDiffEq.jl</title>
    <link href="https://github.com/SciML/OrdinaryDiffEq.jl" />
    <updated>2025-02-06T00:00:00</updated>
    <content type="text">High performance ordinary differential equation (ODE) and differential-algebraic equation (DAE) solvers, including neural ordinary differential equations (neural ODEs) and scientific machine learning (SciML)</content>
  </entry>
  <entry>
    <id>https://github.com/TuringLang/DynamicPPL.jl#1738800000</id>
    <title>https://github.com/TuringLang/DynamicPPL.jl</title>
    <link href="https://github.com/TuringLang/DynamicPPL.jl" />
    <updated>2025-02-06T00:00:00</updated>
    <content type="text">Implementation of domain-specific language (DSL) for dynamic probabilistic programming</content>
  </entry>
  <entry>
    <id>https://github.com/compintell/Mooncake.jl#1738800000</id>
    <title>https://github.com/compintell/Mooncake.jl</title>
    <link href="https://github.com/compintell/Mooncake.jl" />
    <updated>2025-02-06T00:00:00</updated>
    <content type="text">language level autograd compiler for Julia</content>
  </entry>
  <entry>
    <id>https://github.com/oscar-system/Oscar.jl#1738800000</id>
    <title>https://github.com/oscar-system/Oscar.jl</title>
    <link href="https://github.com/oscar-system/Oscar.jl" />
    <updated>2025-02-06T00:00:00</updated>
    <content type="text">A comprehensive open source computer algebra system for computations in algebra, geometry, and number theory.</content>
  </entry>
  <entry>
    <id>https://github.com/ranocha/SummationByPartsOperators.jl#1738800000</id>
    <title>https://github.com/ranocha/SummationByPartsOperators.jl</title>
    <link href="https://github.com/ranocha/SummationByPartsOperators.jl" />
    <updated>2025-02-06T00:00:00</updated>
    <content type="text">A Julia library of summation-by-parts (SBP) operators used in finite difference, Fourier pseudospectral, continuous Galerkin, and discontinuous Galerkin methods to get provably stable semidiscretizations, paying special attention to boundary conditions.</content>
  </entry>
  <entry>
    <id>https://github.com/trixi-framework/Trixi.jl#1738800000</id>
    <title>https://github.com/trixi-framework/Trixi.jl</title>
    <link href="https://github.com/trixi-framework/Trixi.jl" />
    <updated>2025-02-06T00:00:00</updated>
    <content type="text">Trixi.jl: Adaptive high-order numerical simulations of conservation laws in Julia</content>
  </entry>
</feed>