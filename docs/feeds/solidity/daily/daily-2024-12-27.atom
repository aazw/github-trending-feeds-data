<?xml version='1.0' encoding='utf-8'?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en">
  <id>https://aazw.github.io/github-trending-feeds/feeds/solidity/daily.atom</id>
  <title>GitHub Trending - solidity (daily)</title>
  <link href="https://aazw.github.io/github-trending-feeds/feeds/solidity/daily.atom" rel="self" />
  <link href="https://aazw.github.io/github-trending-feeds/" rel="alternate" />
  <updated>2024-12-27T11:29:58+00:00</updated>
  <author>
    <name>aazw</name>
  </author>
  <entry>
    <id>https://github.com/LayerZero-Labs/LayerZero-v2#1735298998</id>
    <title>https://github.com/LayerZero-Labs/LayerZero-v2</title>
    <link href="https://github.com/LayerZero-Labs/LayerZero-v2" />
    <updated>2024-12-27T11:29:58+00:00</updated>
    <content type="text" />
  </entry>
  <entry>
    <id>https://github.com/Uniswap/permit2#1735298998</id>
    <title>https://github.com/Uniswap/permit2</title>
    <link href="https://github.com/Uniswap/permit2" />
    <updated>2024-12-27T11:29:58+00:00</updated>
    <content type="text">🔑🔑🔑 next generation token approvals mechanism</content>
  </entry>
  <entry>
    <id>https://github.com/summa-tx/memview-sol#1735298998</id>
    <title>https://github.com/summa-tx/memview-sol</title>
    <link href="https://github.com/summa-tx/memview-sol" />
    <updated>2024-12-27T11:29:58+00:00</updated>
    <content type="text">Memory access with runtime typechecking in Solidity</content>
  </entry>
  <entry>
    <id>https://github.com/bgd-labs/aave-helpers#1735298998</id>
    <title>https://github.com/bgd-labs/aave-helpers</title>
    <link href="https://github.com/bgd-labs/aave-helpers" />
    <updated>2024-12-27T11:29:58+00:00</updated>
    <content type="text" />
  </entry>
  <entry>
    <id>https://github.com/GNSPS/solidity-bytes-utils#1735298998</id>
    <title>https://github.com/GNSPS/solidity-bytes-utils</title>
    <link href="https://github.com/GNSPS/solidity-bytes-utils" />
    <updated>2024-12-27T11:29:58+00:00</updated>
    <content type="text">Utility Solidity library composed of basic operations for tightly packed bytes arrays</content>
  </entry>
  <entry>
    <id>https://github.com/Uniswap/v2-periphery#1735298998</id>
    <title>https://github.com/Uniswap/v2-periphery</title>
    <link href="https://github.com/Uniswap/v2-periphery" />
    <updated>2024-12-27T11:29:58+00:00</updated>
    <content type="text">🎚 Peripheral smart contracts for interacting with Uniswap V2</content>
  </entry>
  <entry>
    <id>https://github.com/0xmetaschool/Learning-Projects#1735298998</id>
    <title>https://github.com/0xmetaschool/Learning-Projects</title>
    <link href="https://github.com/0xmetaschool/Learning-Projects" />
    <updated>2024-12-27T11:29:58+00:00</updated>
    <content type="text">All the learning projects code from Metaschool website.</content>
  </entry>
  <entry>
    <id>https://github.com/Uniswap/v4-periphery#1735298998</id>
    <title>https://github.com/Uniswap/v4-periphery</title>
    <link href="https://github.com/Uniswap/v4-periphery" />
    <updated>2024-12-27T11:29:58+00:00</updated>
    <content type="text">🦄 🦄 🦄 🦄 Peripheral smart contracts for interacting with Uniswap v4</content>
  </entry>
  <entry>
    <id>https://github.com/circlefin/evm-cctp-contracts#1735298998</id>
    <title>https://github.com/circlefin/evm-cctp-contracts</title>
    <link href="https://github.com/circlefin/evm-cctp-contracts" />
    <updated>2024-12-27T11:29:58+00:00</updated>
    <content type="text">Official repository for all EVM-compatible smart contracts used by the Cross-Chain Transfer Protocol</content>
  </entry>
  <entry>
    <id>https://github.com/Arachnid/solidity-stringutils#1735298998</id>
    <title>https://github.com/Arachnid/solidity-stringutils</title>
    <link href="https://github.com/Arachnid/solidity-stringutils" />
    <updated>2024-12-27T11:29:58+00:00</updated>
    <content type="text">Basic string utilities for Solidity</content>
  </entry>
  <entry>
    <id>https://github.com/foundry-rs/forge-std#1735298998</id>
    <title>https://github.com/foundry-rs/forge-std</title>
    <link href="https://github.com/foundry-rs/forge-std" />
    <updated>2024-12-27T11:29:58+00:00</updated>
    <content type="text">Forge Standard Library is a collection of helpful contracts for use with forge and foundry. It leverages forge's cheatcodes to make writing tests easier and faster, while improving the UX of cheatcodes. For more in-depth usage examples checkout the tests.</content>
  </entry>
  <entry>
    <id>https://github.com/morpho-org/morpho-blue#1735298998</id>
    <title>https://github.com/morpho-org/morpho-blue</title>
    <link href="https://github.com/morpho-org/morpho-blue" />
    <updated>2024-12-27T11:29:58+00:00</updated>
    <content type="text">Morpho Blue Protocol</content>
  </entry>
  <entry>
    <id>https://github.com/PaulRBerg/prb-math#1735298998</id>
    <title>https://github.com/PaulRBerg/prb-math</title>
    <link href="https://github.com/PaulRBerg/prb-math" />
    <updated>2024-12-27T11:29:58+00:00</updated>
    <content type="text">Solidity library for advanced fixed-point math</content>
  </entry>
  <entry>
    <id>https://github.com/semgrep/semgrep-rules#1735298998</id>
    <title>https://github.com/semgrep/semgrep-rules</title>
    <link href="https://github.com/semgrep/semgrep-rules" />
    <updated>2024-12-27T11:29:58+00:00</updated>
    <content type="text">Semgrep rules registry</content>
  </entry>
  <entry>
    <id>https://github.com/l2beat/l2beat#1735298998</id>
    <title>https://github.com/l2beat/l2beat</title>
    <link href="https://github.com/l2beat/l2beat" />
    <updated>2024-12-27T11:29:58+00:00</updated>
    <content type="text">L2BEAT is an analytics and research website about Ethereum layer two (L2) scaling solutions.</content>
  </entry>
  <entry>
    <id>https://github.com/farcasterxyz/contracts#1735298998</id>
    <title>https://github.com/farcasterxyz/contracts</title>
    <link href="https://github.com/farcasterxyz/contracts" />
    <updated>2024-12-27T11:29:58+00:00</updated>
    <content type="text">Implementation of the Farcaster contracts</content>
  </entry>
  <entry>
    <id>https://github.com/OpenZeppelin/openzeppelin-foundry-upgrades#1735298998</id>
    <title>https://github.com/OpenZeppelin/openzeppelin-foundry-upgrades</title>
    <link href="https://github.com/OpenZeppelin/openzeppelin-foundry-upgrades" />
    <updated>2024-12-27T11:29:58+00:00</updated>
    <content type="text">Foundry library for deploying and managing upgradeable contracts</content>
  </entry>
  <entry>
    <id>https://github.com/AmazingAng/WTF-Solidity#1735298998</id>
    <title>https://github.com/AmazingAng/WTF-Solidity</title>
    <link href="https://github.com/AmazingAng/WTF-Solidity" />
    <updated>2024-12-27T11:29:58+00:00</updated>
    <content type="text">WTF Solidity 极简入门教程，供小白们使用。Now supports English! 官网: https://wtf.academy</content>
  </entry>
  <entry>
    <id>https://github.com/Uniswap/v4-core#1735298998</id>
    <title>https://github.com/Uniswap/v4-core</title>
    <link href="https://github.com/Uniswap/v4-core" />
    <updated>2024-12-27T11:29:58+00:00</updated>
    <content type="text">🦄 🦄 🦄 🦄 Core smart contracts of Uniswap v4</content>
  </entry>
</feed>