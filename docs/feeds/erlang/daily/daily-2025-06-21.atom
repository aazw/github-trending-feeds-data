<?xml version='1.0' encoding='utf-8'?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en">
  <id>https://aazw.github.io/github-trending-feeds/feeds/erlang/daily.atom</id>
  <title>GitHub Trending - erlang (daily)</title>
  <link href="https://aazw.github.io/github-trending-feeds/feeds/erlang/daily.atom" rel="self" />
  <link href="https://aazw.github.io/github-trending-feeds/" rel="alternate" />
  <icon>https://github.githubassets.com/favicons/favicon.svg</icon>
  <updated>2025-06-21T00:00:00</updated>
  <author>
    <name>aazw</name>
  </author>
  <entry>
    <id>https://github.com/devinus/poolboy#1750464000</id>
    <title>https://github.com/devinus/poolboy</title>
    <link href="https://github.com/devinus/poolboy" />
    <updated>2025-06-21T00:00:00</updated>
    <content type="text">A hunky Erlang worker pool factory</content>
  </entry>
  <entry>
    <id>https://github.com/emqx/emqx#1750464000</id>
    <title>https://github.com/emqx/emqx</title>
    <link href="https://github.com/emqx/emqx" />
    <updated>2025-06-21T00:00:00</updated>
    <content type="text">The most scalable and reliable MQTT broker for AI, IoT, IIoT and connected vehicles</content>
  </entry>
  <entry>
    <id>https://github.com/ferd/recon#1750464000</id>
    <title>https://github.com/ferd/recon</title>
    <link href="https://github.com/ferd/recon" />
    <updated>2025-06-21T00:00:00</updated>
    <content type="text">Collection of functions and scripts to debug Erlang in production.</content>
  </entry>
  <entry>
    <id>https://github.com/mochi/mochiweb#1750464000</id>
    <title>https://github.com/mochi/mochiweb</title>
    <link href="https://github.com/mochi/mochiweb" />
    <updated>2025-06-21T00:00:00</updated>
    <content type="text">MochiWeb is an Erlang library for building lightweight HTTP servers.</content>
  </entry>
  <entry>
    <id>https://github.com/ninenines/cowlib#1750464000</id>
    <title>https://github.com/ninenines/cowlib</title>
    <link href="https://github.com/ninenines/cowlib" />
    <updated>2025-06-21T00:00:00</updated>
    <content type="text">Support library for manipulating Web protocols.</content>
  </entry>
  <entry>
    <id>https://github.com/ninenines/gun#1750464000</id>
    <title>https://github.com/ninenines/gun</title>
    <link href="https://github.com/ninenines/gun" />
    <updated>2025-06-21T00:00:00</updated>
    <content type="text">HTTP/1.1, HTTP/2, Websocket client (and more) for Erlang/OTP.</content>
  </entry>
  <entry>
    <id>https://github.com/ninenines/ranch#1750464000</id>
    <title>https://github.com/ninenines/ranch</title>
    <link href="https://github.com/ninenines/ranch" />
    <updated>2025-06-21T00:00:00</updated>
    <content type="text">Socket acceptor pool for TCP protocols.</content>
  </entry>
  <entry>
    <id>https://github.com/potatosalad/erlang-jose#1750464000</id>
    <title>https://github.com/potatosalad/erlang-jose</title>
    <link href="https://github.com/potatosalad/erlang-jose" />
    <updated>2025-06-21T00:00:00</updated>
    <content type="text">JSON Object Signing and Encryption (JOSE) for Erlang and Elixir</content>
  </entry>
  <entry>
    <id>https://github.com/rabbitmq/rabbitmq-delayed-message-exchange#1750464000</id>
    <title>https://github.com/rabbitmq/rabbitmq-delayed-message-exchange</title>
    <link href="https://github.com/rabbitmq/rabbitmq-delayed-message-exchange" />
    <updated>2025-06-21T00:00:00</updated>
    <content type="text">Delayed Messaging for RabbitMQ</content>
  </entry>
  <entry>
    <id>https://github.com/rustyio/sync#1750464000</id>
    <title>https://github.com/rustyio/sync</title>
    <link href="https://github.com/rustyio/sync" />
    <updated>2025-06-21T00:00:00</updated>
    <content type="text">On-the-fly recompiling and reloading in Erlang. Code without friction.</content>
  </entry>
  <entry>
    <id>https://github.com/seth/ej#1750464000</id>
    <title>https://github.com/seth/ej</title>
    <link href="https://github.com/seth/ej" />
    <updated>2025-06-21T00:00:00</updated>
    <content type="text">Helper module for working with Erlang terms representing JSON</content>
  </entry>
  <entry>
    <id>https://github.com/talentdeficit/jsx#1750464000</id>
    <title>https://github.com/talentdeficit/jsx</title>
    <link href="https://github.com/talentdeficit/jsx" />
    <updated>2025-06-21T00:00:00</updated>
    <content type="text">an erlang application for consuming, producing and manipulating json. inspired by yajl</content>
  </entry>
  <entry>
    <id>https://github.com/tomas-abrahamsson/gpb#1750464000</id>
    <title>https://github.com/tomas-abrahamsson/gpb</title>
    <link href="https://github.com/tomas-abrahamsson/gpb" />
    <updated>2025-06-21T00:00:00</updated>
    <content type="text">A Google Protobuf implementation for Erlang</content>
  </entry>
  <entry>
    <id>https://github.com/uwiger/gproc#1750464000</id>
    <title>https://github.com/uwiger/gproc</title>
    <link href="https://github.com/uwiger/gproc" />
    <updated>2025-06-21T00:00:00</updated>
    <content type="text">Extended process registry for Erlang</content>
  </entry>
</feed>